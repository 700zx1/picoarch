diff --git a/libretro_core_options.h b/libretro_core_options.h
index c23a2c3..ae3c70c 100644
--- a/libretro_core_options.h
+++ b/libretro_core_options.h
@@ -56,11 +56,13 @@ struct retro_core_option_definition option_defs_us[] = {
    {
       "gpsp_bios",
       "BIOS",
-      "Choose the BIOS image to use. The official BIOS must be provided by the user. Using a non-official (or builtin) BIOS might result in incompatibility problems with some games. Best results are to be achieved with the official Nintendo BIOS.",
+      "Choose the BIOS image to use. The official BIOS\n"
+      "must be provided by the user. Using a builtin\n"
+      "BIOS might result in compatibility problems.",
       {
-         { "auto",      "Auto select" },
-         { "builtin",   "Builtin BIOS" },
-         { "official",  "Original BIOS" },
+         { "auto",      "auto" },
+         { "builtin",   "builtin" },
+         { "official",  "original" },
          { NULL, NULL },
       },
       "auto"
@@ -68,10 +70,11 @@ struct retro_core_option_definition option_defs_us[] = {
    {
       "gpsp_boot_mode",
       "Boot mode",
-      "Choose whether to boot the BIOS before the game or not. There's not much difference in either modes.",
+      "Choose whether to boot the BIOS before the game\n"
+      "or not.",
       {
-         { "game",      "Boot to game" },
-         { "bios",      "Boot to BIOS" },
+         { "game",      "game" },
+         { "bios",      "BIOS" },
          { NULL, NULL },
       },
       "game"
@@ -79,20 +82,23 @@ struct retro_core_option_definition option_defs_us[] = {
    {
       "gpsp_frameskip",
       "Frameskip",
-      "Skip frames to avoid audio buffer under-run (crackling). Improves performance at the expense of visual smoothness. 'Auto' skips frames when advised by the frontend. 'Auto (Threshold)' utilises the 'Frameskip Threshold (%)' setting. 'Fixed Interval' utilises the 'Frameskip Interval' setting.",
+      "Skip frames to avoid audio crackling. Improves\n"
+      "performance at the expense of visual smoothness.",
       {
          { "disabled",       NULL },
          { "auto",           "Auto" },
-         { "auto_threshold", "Auto (Threshold)" },
-         { "fixed_interval", "Fixed Interval" },
+         { "auto_threshold", "Threshold" },
+         { "fixed_interval", "Fixed" },
          { NULL, NULL },
       },
-      "disabled"
+      "auto"
    },
    {
       "gpsp_frameskip_threshold",
-      "Frameskip Threshold (%)",
-      "When 'Frameskip' is set to 'Auto (Threshold)', specifies the audio buffer occupancy threshold (percentage) below which frames will be skipped. Higher values reduce the risk of crackling by causing frames to be dropped more frequently.",
+      "FS Threshold (%)",
+      "When 'Frameskip' is set to 'Threshold', sets\n"
+      "how low the audio buffer can get before frames\n"
+      "will be skipped.",
       {
          { "15", NULL },
          { "18", NULL },
@@ -116,8 +122,9 @@ struct retro_core_option_definition option_defs_us[] = {
    },
    {
       "gpsp_frameskip_interval",
-      "Frameskip Interval",
-      "When 'Frameskip' is set to 'Fixed Interval', the value set here is the number of frames omitted after a frame is rendered - i.e. '0' = 60fps, '1' = 30fps, '2' = 15fps, etc.",
+      "FS Interval",
+      "The maximum number of frames that can be skipped\n"
+      "before a new frame is rendered.",
       {
          { "0",  NULL },
          { "1",  NULL },
@@ -132,46 +139,49 @@ struct retro_core_option_definition option_defs_us[] = {
          { "10", NULL },
          { NULL, NULL },
       },
-      "1"
+      "3"
    },
    {
       "gpsp_color_correction",
       "Color Correction",
-      "Adjusts output colors to match the display of real GBA hardware.",
+      "Adjusts output colors to match real GBA hardware.",
       {
-         { "enabled",  NULL },
          { "disabled", NULL },
+         { "enabled",  NULL },
          { NULL, NULL },
       },
       "disabled"
    },
    {
       "gpsp_frame_mixing",
-      "Interframe Blending",
-      "Simulates LCD ghosting effects by performing a 50:50 mix of the current and previous frames. Required for correct operation when playing games that exploit LCD ghosting for transparency effects (F-Zero, the Boktai series, etc.).",
+      "Frame Blending",
+      "Simulates LCD ghosting effects.",
       {
-         { "enabled",  NULL },
          { "disabled", NULL },
+         { "enabled",  NULL },
          { NULL, NULL },
       },
       "disabled"
    },
    {
       "gpsp_save_method",
-      "Backup Save Method (Restart)",
-      "Choose the data format used for cartridge save files. 'gpSP' can be used for compatibility with the stand-alone version of gpSP. 'libretro' provides better integration with the frontend.",
+      "Save Format",
+      "Choose the data format used for cartridge save\n"
+      "files. Must restart to take effect.",
       {
          { "gpSP",     NULL },
          { "libretro", NULL },
          { NULL, NULL },
       },
-      "gpSP"
+      "libretro"
    },
 #if defined(HAVE_DYNAREC)
    {
       "gpsp_drc",
       "Dynamic Recompiler",
-      "Dynamically recompile CPU instructions to native instructions. Greatly improves performance, but may reduce accuracy.",
+      "Dynamically recompile CPU instructions to native\n"
+      "instructions. Greatly improves performance, but\n"
+      "may reduce accuracy.",
       {
          { "enabled",  NULL },
          { "disabled", NULL },
@@ -183,7 +193,8 @@ struct retro_core_option_definition option_defs_us[] = {
    {
       "gpsp_turbo_period",
       "Turbo Button Period",
-      "Specify the repeat interval (in frames) when holding down the Turbo A/B buttons.",
+      "Specify the repeat interval (in frames) when\n"
+      "holding down the Turbo A/B buttons.",
       {
          { "4",   NULL },
          { "5",   NULL },
